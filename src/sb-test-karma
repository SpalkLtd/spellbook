#!/usr/bin/env node
var config = require('./utils/get-config')();
var PathExists = require('./utils/path-exists');
var path = require('path');
var GetPath = require('./utils/get-path');
var RunCommand = require('./utils/run-command');

var program = require('commander')
  .version(config.sbVersion)
  .option('-w, --watch', 'keep the tester running and run as things change')
  .option('-b, --browsers', 'comma seperated list of browsers to run on')
  .parse(process.argv);

var KARMA_BROWSERS = ['Chrome', 'Firefox', 'IE', 'Safari'];


var testDist = path.join(config.dist, 'test', config.name + '.js');
var srcDist = path.join(config.dist, 'browser', config.name + '.js');
var cssDist = path.join(config.dist, 'browser', config.name + '.css');
var bundlerDist = path.join(config.cache, 'bundlers');

if (!PathExists(testDist) || !PathExists(srcDist)) {
  RunCommand('exec', GetPath('sb-build-js'));
}

if (!PathExists(cssDist)) {
  RunCommand('exec', GetPath('sb-build-css'));
}

if (!program.files) {
  program.files = [
    path.join(config.dist, 'browser', config.name + '.css'),
    path.join(config.dist, 'test', config.name + '.js')
  ];
}

// TODO: how do we integrate this with spellbook-start (module.export?)
// TODO: test non-browser environments somehow
// http://localhost:9876/debug.html will be qunit UI
var karmaCommand = GetPath('karma')
  + ' start ' + GetPath('karma.config.js')

if (program.watch) {
  karmaCommand += ' --auto-watch';
  karmaCommand += ' --no-single-run';
} else  {
  karmaCommand += ' --no-auto-watch';
  karmaCommand += ' --single-run';
}

if (program.browsers) {
  karmaCommand += ' --browsers ' + program.browsers.join(',');
}

RunCommand('exec', karmaCommand);
