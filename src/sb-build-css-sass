#!/usr/bin/env node
var config = require('./utils/get-config')();
var PathExists = require('./utils/path-exists');
var shelljs = require('shelljs');
var path = require('path');
var RunCommand = require('./utils/run-command');
var GetPath = require('./utils/get-path');

var program = require('commander')
  .version(config.sbVersion)
  .option('-w, --watch', 'incremental rebuild')
  .option('-d, --dist <dist-dir>', 'dir to write output to')
  .arguments('<src-file>')
  .action(function(src) {
    this.src = src;
  })
  .parse(process.argv);

if (!program.src) {
  program.src = path.join(config.src, 'css', 'index.scss');
}

if (!program.dist) {
  program.dist = path.join(config.dist, 'browser');
}

if (!PathExists(program.src)) {
  console.error(program.src + ' does not exist!');
}

// get the dist file with no extension
var distFile = path.join(program.dist, config.name);

shelljs.rm('-rf', program.dist);
shelljs.mkdir('-p', program.dist);
var cmd = ''
    + GetPath('node-sass')
    + ' ' + program.src
    + ' ' + distFile + '.css'
    + ' --output-style=compressed'
    + ' --linefeed=lf'
    + ' --sourceMap true'
    + ' --sourceMapContents'
    + ' --sourceMapEmbed';

if (program.watch) {
  cmd += ' --watch';
}

shelljs.config.silent = true;
shelljs.exec(cmd);

console.log('Wrote ' + distFile + '.css');
console.log('Wrote ' + distFile + '.css.map');

// we don't want to bother building a .min.css file
// during watch
if (program.watch) {
  process.exit(0);
}

shelljs.exec(GetPath('cssnano')
  + ' --safe'
  + ' --sourcemap'
  + ' ' + distFile + '.css'
).to(distFile + '.min.css');

shelljs.cat(distFile + '.css')
  .exec(GetPath('exorcist') + " '" + distFile + ".css.map'", {silent: true})
  .to(distFile + '.css');

shelljs.cat(distFile + '.min.css')
  .exec(GetPath('exorcist') + " '" + distFile + ".min.css.map'", {silent: true})
  .to(distFile + '.min.css');

console.log('Wrote ' + distFile + '.min.css');
console.log('Wrote ' + distFile + '.min.css.map');

