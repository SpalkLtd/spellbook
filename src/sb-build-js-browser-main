#!/usr/bin/env node
var config = require('./utils/get-config')();
var PathExists = require('./utils/path-exists');
var GetPath = require('./utils/get-path');
var path = require('path');
var shelljs = require('shelljs');
var browserifyHelper = require('./utils/browserify-helper');

var program = require('commander')
  .version(config.sbVersion)
  .option('-w, --watch', 'incremental rebuild')
  .option('-d, --dist <dir>', 'dir to write output to')
  .arguments('<entry-file>')
  .action(function(src) {
    this.src = src;
  })
  .parse(process.argv);

if (!program.src) {
  program.src = path.join(config.src, 'js', 'index.js')
}

if (!program.dist) {
  program.dist = path.join(config.dist, 'browser');
}

var distFile = path.join(program.dist, config.name);
browserifyHelper({
  dist: distFile,
  src: program.src,
  standalone: true,
  watch: program.watch
});
console.log('Wrote ' + distFile + '.js');
console.log('Wrote ' + distFile + '.js.map');

// we don't want to uglify after watching
if (program.watch) {
  process.exit(0);
}

shelljs.exec(GetPath('uglifyjs')
  + ' --compress'
  + ' --mangle'
  + ' --in-source-map ' + distFile + '.js.map'
  + ' --source-map ' + distFile + '.min.js.map'
  + ' --preamble ' + config.banner
  + ' -o ' + distFile + '.min.js'
  + ' -- ' + distFile + '.js'
);
console.log('Wrote ' + distFile + '.min.js');
console.log('Wrote ' + distFile + '.min.js.map');

shelljs.rm('-f', path.join(config.path, '.babelrc'));
